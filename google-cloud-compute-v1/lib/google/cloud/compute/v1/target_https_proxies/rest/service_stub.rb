# frozen_string_literal: true

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "gapic/rest"
require "google/cloud/compute/v1/compute_small_pb"

module Google
  module Cloud
    module Compute
      module V1
        module TargetHttpsProxies
          module Rest
            ##
            # REST service stub for the TargetHttpsProxies service.
            #
            class ServiceStub
              ##
              # Create a new TargetHttpsProxies REST service stub object.
              #
              # @param endpoint [String]
              #   The hostname or hostname:port of the service endpoint.
              #   Defaults to `"localhost:7469"`.
              #
              # @param credentials [Google::Auth::Credentials]
              #   Credentials to send with calls in form of a googleauth credentials object.
              #   (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
              #
              def initialize endpoint:, credentials:
                @client_stub = ::Gapic::Rest::ClientStub.new endpoint: endpoint, credentials: credentials
              end

              # Service calls

              ##
              # Retrieves the list of all TargetHttpsProxy resources, regional and global, available to the specified project.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::AggregatedListTargetHttpsProxiesRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::TargetHttpsProxyAggregatedList]
              def aggregated_list request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::AggregatedListTargetHttpsProxiesRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/aggregated/targetHttpsProxies"

                result_json = @client_stub.make_get_request(
                  uri:     uri,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::TargetHttpsProxyAggregatedList.decode_json result_json[:body]
              end

              ##
              # Deletes the specified TargetHttpsProxy resource.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::DeleteTargetHttpsProxyRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def delete request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::DeleteTargetHttpsProxyRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/global/targetHttpsProxies/#{request_pb.target_https_proxy}"

                result_json = @client_stub.make_delete_request(
                  uri:     uri,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body]
              end

              ##
              # Returns the specified TargetHttpsProxy resource. Gets a list of available target HTTPS proxies by making a list() request.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::GetTargetHttpsProxyRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::TargetHttpsProxy]
              def get request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::GetTargetHttpsProxyRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/global/targetHttpsProxies/#{request_pb.target_https_proxy}"

                result_json = @client_stub.make_get_request(
                  uri:     uri,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::TargetHttpsProxy.decode_json result_json[:body]
              end

              ##
              # Creates a TargetHttpsProxy resource in the specified project using the data included in the request.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::InsertTargetHttpsProxyRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def insert request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::InsertTargetHttpsProxyRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/global/targetHttpsProxies"
                body = request_pb.target_https_proxy_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body]
              end

              ##
              # Retrieves the list of TargetHttpsProxy resources available to the specified project.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::ListTargetHttpsProxiesRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::TargetHttpsProxyList]
              def list request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::ListTargetHttpsProxiesRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/global/targetHttpsProxies"

                result_json = @client_stub.make_get_request(
                  uri:     uri,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::TargetHttpsProxyList.decode_json result_json[:body]
              end

              ##
              # Sets the QUIC override policy for TargetHttpsProxy.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::SetQuicOverrideTargetHttpsProxyRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def set_quic_override request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::SetQuicOverrideTargetHttpsProxyRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/global/targetHttpsProxies/#{request_pb.target_https_proxy}/setQuicOverride"
                body = request_pb.target_https_proxies_set_quic_override_request_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body]
              end

              ##
              # Replaces SslCertificates for TargetHttpsProxy.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::SetSslCertificatesTargetHttpsProxyRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def set_ssl_certificates request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::SetSslCertificatesTargetHttpsProxyRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/targetHttpsProxies/#{request_pb.target_https_proxy}/setSslCertificates"
                body = request_pb.target_https_proxies_set_ssl_certificates_request_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body]
              end

              ##
              # Sets the SSL policy for TargetHttpsProxy. The SSL policy specifies the server-side support for SSL features. This affects connections between clients and the HTTPS proxy load balancer. They do not affect the connection between the load balancer and the backends.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::SetSslPolicyTargetHttpsProxyRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def set_ssl_policy request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::SetSslPolicyTargetHttpsProxyRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/global/targetHttpsProxies/#{request_pb.target_https_proxy}/setSslPolicy"
                body = request_pb.ssl_policy_reference_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body]
              end

              ##
              # Changes the URL map for TargetHttpsProxy.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::SetUrlMapTargetHttpsProxyRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def set_url_map request_pb, options:, &block
                request_json = JSON.parse ::Google::Cloud::Compute::V1::SetUrlMapTargetHttpsProxyRequest.encode_json(request_pb)

                uri = "/compute/v1/projects/#{request_pb.project}/targetHttpsProxies/#{request_pb.target_https_proxy}/setUrlMap"
                body = request_pb.url_map_reference_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body]
              end
            end
          end
        end
      end
    end
  end
end
